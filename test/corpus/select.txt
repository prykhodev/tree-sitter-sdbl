============================================================
Select 1
============================================================

SELECT 1;

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          (literal))))))

============================================================
Select aliased literals
============================================================

SELECT "1" AS _1,
    2 AS _2,
    TRUE КАК _3,
    NULL as _4;

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (literal)
          (keyword_as)
          alias: (identifier))
        (term
          value: (literal)
          (keyword_as)
          alias: (identifier))
        (term
          value: (literal
            (keyword_true))
          (keyword_as)
          alias: (identifier))
        (term
          value: (literal
            (keyword_null))
          (keyword_as)
          alias: (identifier))))))

============================================================
Select distinct allowed top
============================================================

SELECT DISTINCT ALLOWED TOP 1 1;

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (keyword_distinct)
        (keyword_allowed)
        (top_statement
          (keyword_top)
          (natural_number))
          (term
            (literal))))))

============================================================
Select top allowed distinct
============================================================

SELECT TOP 1 ALLOWED DISTINCT 1;

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (top_statement
          (keyword_top)
          (natural_number))
        (keyword_allowed)
        (keyword_distinct)
          (term
            (literal))))))

============================================================
More complex top allowed distinct
============================================================

SELECT
    0,
	DISTINCT TOP 10 1 a,
	DISTINCT ALLOWED("2"),
	ALLOWED DISTINCT(NULL) AS c

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (literal))
        (keyword_distinct)
        (top_statement
          (keyword_top)
          (natural_number))
        (term
          value: (literal)
          alias: (identifier))
        (keyword_distinct)
        (keyword_allowed)
        (term
          value: (parenthesized_expression
            (literal)))
        (keyword_allowed)
        (keyword_distinct)
        (term
          value: (parenthesized_expression
            (literal
              (keyword_null)))
          (keyword_as)
          alias: (identifier))))))

===============================================================================
Simple select
===============================================================================

SELECT * FROM my_table;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))))))

============================================================
Simple select into
============================================================

SELECT 1 INTO table;

------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (literal))))
    (into
      (keyword_into)
      name: (identifier))))

================================================================================
Table.*
================================================================================

SELECT my_table.* FROM my_table;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields
            (object_reference
              name: (identifier))))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))))))

================================================================================
Alias.*
================================================================================

SELECT t.* FROM my_table AS t;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields
            (object_reference
              name: (identifier))))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        (keyword_as)
        alias: (identifier)))))

================================================================================
Simple select with fields
================================================================================

SELECT id, name FROM my_table;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            name: (identifier)))
        (term
          value: (field
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))))))

================================================================================
Simple select with fields that look like keywords
================================================================================

SELECT t.from_where, t.created_at, t.updated_at
FROM join_something_on AS where_this_like_that;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        (keyword_as)
        alias: (identifier)))))

================================================================================
Simple select with fields field table alias
================================================================================

SELECT m.id, m.name
FROM my_table m;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier)))))

================================================================================
Simple select with where
================================================================================

SELECT id
FROM my_table
WHERE id = 4;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier)))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (field
            name: (identifier))
          right: (literal))))))

================================================================================
Simple select with where and string
================================================================================

SELECT id
FROM my_table
WHERE id = "abc";

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier)))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (field
            name: (identifier))
          right: (literal))))))

================================================================================
Joins
================================================================================

SELECT a.id, b.id
FROM my_table a
JOIN my_other_table b
ON a.id = b.a_id;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))))

================================================================================
Join with boolean
================================================================================

SELECT *
FROM my_table
JOIN my_other_table ON TRUE;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier)))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier)))
        (keyword_on)
        predicate: (literal
          (keyword_true))))))

================================================================================
Specific Joins
================================================================================

SELECT table_a.id
FROM table_a a
LEFT JOIN table_b b
ON a.id = b.a_id
LEFT OUTER JOIN table_c c
ON a.id = c.a_id
RIGHT JOIN table_d d
ON a.id = d.d_id
RIGHT OUTER JOIN table_d d
ON a.id = d.d_id
INNER JOIN table_e e
ON a.id = e.e_id
FULL OUTER JOIN table_f f
ON a.id = f.f_id
FULL JOIN table_g g
ON a.id = g.g_id;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (join
        (keyword_left)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_left)
        (keyword_outer)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_right)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_right)
        (keyword_outer)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_inner)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_full)
        (keyword_outer)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_full)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))))

================================================================================
Multiple joins
================================================================================

SELECT
    a.id, b.id, c.id
FROM
    my_table a
        JOIN my_other_table b
        ON a.id = b.a_id
        JOIN table_three c
        ON a.id = c.a_id
        LEFT JOIN table_four d
            JOIN table_five e
            ON d.e_id = e.id
        ON c.id = d.c_id;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (join
        (keyword_left)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (join
          (keyword_join)
          (relation
            (object_reference
              name: (identifier))
            alias: (identifier))
          (keyword_on)
          predicate: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (field
              (object_reference
                name: (identifier))
              name: (identifier))))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))))

================================================================================
Simple select with order by
================================================================================

SELECT id
FROM my_table
WHERE id > 4
ORDER BY id DESC;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier)))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (field
            name: (identifier))
          right: (literal)))
      (order_by
        (keyword_order)
        (keyword_by)
        (order_target
          (field
            name: (identifier))
          (direction
            (keyword_desc)))))))

================================================================================
Complex Predicates with order by
================================================================================

SELECT title, id
FROM my_table m
WHERE m.id > 4 AND id < 3
ORDER BY m.title, id ASC;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            name: (identifier)))
        (term
          value: (field
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (literal))
          operator: (keyword_and)
          right: (binary_expression
            left: (field
              name: (identifier))
            right: (literal))))
      (order_by
        (keyword_order)
        (keyword_by)
        (order_target
          (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (order_target
          (field
            name: (identifier))
          (direction
            (keyword_asc)))))))

================================================================================
Altogether now
================================================================================

SELECT c._id, c.p_id
  FROM c_table c
JOIN cp_table cp
  ON cp.c_id = c.id
  AND cp.s_id = c.s_id
JOIN my_table
  ON c.c_id = my_table.id
  AND c.s_id = my_table.s_id
WHERE c.s_id = 1239
  AND c.p_id in (1)
  AND cp.ch_id = 6
  AND cp.is_published = TRUE
ORDER BY my_table.title, my_table.id;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (field
              (object_reference
                name: (identifier))
              name: (identifier)))
          operator: (keyword_and)
          right: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (field
              (object_reference
                name: (identifier))
              name: (identifier)))))
      (join
        (keyword_join)
        (relation
          (object_reference
            name: (identifier)))
        (keyword_on)
        predicate: (binary_expression
          left: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (field
              (object_reference
                name: (identifier))
              name: (identifier)))
          operator: (keyword_and)
          right: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (field
              (object_reference
                name: (identifier))
              name: (identifier)))))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (binary_expression
            left: (binary_expression
              left: (binary_expression
                left: (field
                  (object_reference
                    name: (identifier))
                  name: (identifier))
                right: (literal))
              operator: (keyword_and)
              right: (binary_expression
                left: (field
                  (object_reference
                    name: (identifier))
                  name: (identifier))
                operator: (keyword_in)
                right: (list
                  (literal))))
            operator: (keyword_and)
            right: (binary_expression
              left: (field
                (object_reference
                  name: (identifier))
                name: (identifier))
              right: (literal)))
          operator: (keyword_and)
          right: (binary_expression
            left: (field
              (object_reference
                name: (identifier))
              name: (identifier))
            right: (literal
              (keyword_true)))))
      (order_by
        (keyword_order)
        (keyword_by)
        (order_target
          (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (order_target
          (field
            (object_reference
              name: (identifier))
            name: (identifier)))))))

================================================================================
Multiple tables in list
================================================================================

SELECT *
FROM
    Table1 a,
    Table2 b,
    Table3 c,
    TableN z;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier)))))

================================================================================
Select from aliased subquery
================================================================================

SELECT NULL
FROM
  (SELECT * FROM tab2) AS tab;

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (literal
            (keyword_null)))))
    (from
      (keyword_from)
      (relation
        (subquery
          (select
            (keyword_select)
            (select_expression
              (term
                value: (all_fields))))
          (from
            (keyword_from)
            (relation
              (object_reference
                name: (identifier)))))
        (keyword_as)
        alias: (identifier)))))

================================================================================
No semi-colon
================================================================================

SELECT *
FROM some_table s

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier)))))

================================================================================
Aliases everywhere
================================================================================

SELECT
  s.id,
  at.code AS codes,
  // comment
  s.another_table_id
FROM some_table s
  LEFT JOIN another_table at
    ON s.another_table_id = at.id
WHERE
  s.is_not_deleted = 1

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          (keyword_as)
          alias: (identifier))
        (comment)
        (term
          value: (field
            (object_reference
              name: (identifier))
            name: (identifier)))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))
        alias: (identifier))
      (join
        (keyword_left)
        (keyword_join)
        (relation
          (object_reference
            name: (identifier))
          alias: (identifier))
        (keyword_on)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (field
            (object_reference
              name: (identifier))
            name: (identifier))))
      (where
        (keyword_where)
        predicate: (binary_expression
          left: (field
            (object_reference
              name: (identifier))
            name: (identifier))
          right: (literal))))))

================================================================================
Select for update
================================================================================

SELECT
	*
FROM
	Constants
FOR UPDATE
	Constants

--------------------------------------------------------------------------------

(program
  (statement
    (select
      (keyword_select)
      (select_expression
        (term
          value: (all_fields))))
    (from
      (keyword_from)
      (relation
        (object_reference
          name: (identifier))))
    (for_update
      (keyword_for)
      (keyword_update)
      (object_reference
          name: (identifier)))))

================================================================================
Select for update
================================================================================

SELECT
	table.x
FROM
	Catalog.table table
TOTALS
	COUNT(DISTINCT table.x)
BY
	OVERALL,
	table.y

--------------------------------------------------------------------------------
